{"ast":null,"code":"import React,{useState}from\"react\";import\"./App.css\";// Main 컴포넌트를 가져옵니다. main.jsx 파일의 경로가 src/app/main.jsx라고 가정합니다.\nimport{Main}from\"./app/main\";// Main 컴포넌트의 실제 경로로 수정해주세요.\n// import { Chat } from \"./app/chat\"; // Chat 컴포넌트 사용 시 주석 해제\n// import { Analysis } from \"./app/analysis\"; // Analysis 컴포넌트 사용 시 주석 해제\n// import { evaluate } from \"./app/evaluate\"; // evaluate 컴포넌트는 현재 사용되지 않음\n// ChatPage 컴포넌트 (플레이스홀더)\n// 실제 Chat 기능을 구현할 때 이 컴포넌트를 확장하거나 ./app/chat.jsx의 Chat 컴포넌트를 사용합니다.\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ChatPage=()=>{return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uCC57\\uBD07 \\uD398\\uC774\\uC9C0\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uCC57\\uBD07 \\uAE30\\uB2A5\\uC774 \\uC5EC\\uAE30\\uC5D0 \\uD45C\\uC2DC\\uB429\\uB2C8\\uB2E4.\"})]});};// AnalysisPage 컴포넌트\n// 영상 업로드 및 분석 결과 표시 로직을 담당합니다.\nconst AnalysisPage=()=>{const[video,setVideo]=useState(null);const[videoUploaded,setVideoUploaded]=useState(false);const[result,setResult]=useState(null);const[isLoading,setIsLoading]=useState(false);// 로딩 상태 추가\nconst[error,setError]=useState(null);// 에러 상태 추가\n// API 엔드포인트 (환경 변수 등으로 관리하는 것을 권장)\nconst API_BASE_URL=\"http://localhost:5000\";const handleUpload=async()=>{if(!video)return;setIsLoading(true);setError(null);setResult(null);// 이전 결과 초기화\nsetVideoUploaded(false);// 업로드 상태 초기화\nconst formData=new FormData();formData.append(\"video\",video);try{const response=await fetch(`${API_BASE_URL}/upload`,{method:\"POST\",body:formData});if(!response.ok){const errorData=await response.json().catch(()=>({message:\"서버 응답을 파싱할 수 없습니다.\"}));throw new Error(errorData.message||`HTTP error! status: ${response.status}`);}const data=await response.json();if(data.video_path){setVideoUploaded(true);// 업로드 성공 표시\n// 업로드 성공 후 바로 분석 시작 (analyzeVideo 내부에서 로딩 상태 관리)\nawait analyzeVideo(data.video_path);}else{throw new Error(\"서버로부터 비디오 경로를 받지 못했습니다.\");}}catch(e){console.error(\"Upload failed:\",e);setError(`업로드 실패: ${e.message}`);setVideoUploaded(false);}finally{// analyzeVideo가 자체적으로 setIsLoading(false)를 호출하므로,\n// 여기서는 analyzeVideo가 호출되지 않은 경우(예: video_path가 없는 경우)에만 false로 설정\nif(!videoUploaded){setIsLoading(false);}}};const analyzeVideo=async videoPath=>{// analyzeVideo 호출 시 이미 setIsLoading(true)가 handleUpload에서 설정되었거나,\n// 별도 호출 시 여기서 설정 필요\nif(!isLoading)setIsLoading(true);setError(null);// 이전 에러 초기화\nsetResult(null);// 이전 결과 초기화\ntry{const response=await fetch(`${API_BASE_URL}/analyze`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({video_path:videoPath})});if(!response.ok){const errorData=await response.json().catch(()=>({message:\"서버 응답을 파싱할 수 없습니다.\"}));throw new Error(errorData.message||`HTTP error! status: ${response.status}`);}const data=await response.json();setResult(data);}catch(e){console.error(\"Analysis failed:\",e);setError(`분석 실패: ${e.message}`);}finally{setIsLoading(false);// 분석 완료 또는 실패 시 로딩 해제\n}};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uC6B4\\uB3D9 \\uC601\\uC0C1 \\uBD84\\uC11D\"}),(!videoUploaded||!result)&&!isLoading&&/*#__PURE__*/_jsxs(\"div\",{className:\"upload-section\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",accept:\"video/*\",onChange:e=>{setVideo(e.target.files[0]);setVideoUploaded(false);// 새 파일 선택 시 업로드 상태 초기화\nsetResult(null);// 새 파일 선택 시 결과 초기화\nsetError(null);// 새 파일 선택 시 에러 초기화\n}}),/*#__PURE__*/_jsx(\"button\",{onClick:handleUpload,disabled:!video||isLoading,children:isLoading?\"처리 중...\":\"영상 업로드 및 분석 시작\"}),/*#__PURE__*/_jsx(\"p\",{children:\"MP4, MOV, AVI \\uD615\\uC2DD\\uC744 \\uC9C0\\uC6D0\\uD569\\uB2C8\\uB2E4. \\uCD5C\\uB300 100MB\"})]}),isLoading&&/*#__PURE__*/_jsx(\"p\",{children:\"\\uBD84\\uC11D \\uC911\\uC785\\uB2C8\\uB2E4...\"}),error&&/*#__PURE__*/_jsxs(\"p\",{style:{color:\"red\"},children:[\"\\uC624\\uB958: \",error]}),videoUploaded&&!isLoading&&!error&&result&&/*#__PURE__*/_jsxs(\"div\",{className:\"result-section\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"\\uBD84\\uC11D \\uACB0\\uACFC\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uC810\\uC218:\"}),\" \",result.score]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uAC15\\uC810:\"}),\" \",result.strengths&&result.strengths.join(\", \")]}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"\\uAC1C\\uC120\\uC810:\"}),\" \",result.improvements&&result.improvements.join(\", \")]}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>{setVideo(null);setVideoUploaded(false);setResult(null);setError(null);// 파일 입력 필드 초기화 (필요시)\n// const fileInput = document.querySelector('input[type=\"file\"]');\n// if (fileInput) fileInput.value = \"\";\n},children:\"\\uB2E4\\uB978 \\uC601\\uC0C1 \\uBD84\\uC11D\\uD558\\uAE30\"})]})]});};function App(){// 현재 활성화된 뷰를 관리하는 상태 ('main', 'chat', 'analysis')\n// 기본값으로 'main' (홈 화면)을 설정합니다.\nconst[currentView,setCurrentView]=useState(\"main\");// 뷰를 변경하는 함수\nconst navigateTo=view=>{setCurrentView(view);};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"AI \\uD648\\uD2B8 \\uBAA8\\uB2C8\\uD130\\uB9C1\"}),/*#__PURE__*/_jsxs(\"nav\",{className:\"navigation-tabs\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigateTo(\"main\"),className:`nav-button ${currentView===\"main\"?\"active\":\"\"}`,children:\"\\uD648\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigateTo(\"chat\"),className:`nav-button ${currentView===\"chat\"?\"active\":\"\"}`,children:\"\\uCC57\\uBD07\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>navigateTo(\"analysis\"),className:`nav-button ${currentView===\"analysis\"?\"active\":\"\"}`,children:\"\\uBD84\\uC11D\"})]}),/*#__PURE__*/_jsxs(\"main\",{className:\"view-content\",children:[currentView===\"main\"&&/*#__PURE__*/_jsx(Main,{navigateTo:navigateTo}),\" \",currentView===\"chat\"&&/*#__PURE__*/_jsx(ChatPage,{}),currentView===\"analysis\"&&/*#__PURE__*/_jsx(AnalysisPage,{})]})]});}export default App;","map":{"version":3,"names":["React","useState","Main","jsx","_jsx","jsxs","_jsxs","ChatPage","children","AnalysisPage","video","setVideo","videoUploaded","setVideoUploaded","result","setResult","isLoading","setIsLoading","error","setError","API_BASE_URL","handleUpload","formData","FormData","append","response","fetch","method","body","ok","errorData","json","catch","message","Error","status","data","video_path","analyzeVideo","e","console","videoPath","headers","JSON","stringify","className","type","accept","onChange","target","files","onClick","disabled","style","color","score","strengths","join","improvements","App","currentView","setCurrentView","navigateTo","view"],"sources":["C:/Users/didxo/OneDrive/Desktop/3rd project code(flask)/my-react-app/src/App.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n// Main 컴포넌트를 가져옵니다. main.jsx 파일의 경로가 src/app/main.jsx라고 가정합니다.\nimport { Main } from \"./app/main\"; // Main 컴포넌트의 실제 경로로 수정해주세요.\n// import { Chat } from \"./app/chat\"; // Chat 컴포넌트 사용 시 주석 해제\n// import { Analysis } from \"./app/analysis\"; // Analysis 컴포넌트 사용 시 주석 해제\n// import { evaluate } from \"./app/evaluate\"; // evaluate 컴포넌트는 현재 사용되지 않음\n\n// ChatPage 컴포넌트 (플레이스홀더)\n// 실제 Chat 기능을 구현할 때 이 컴포넌트를 확장하거나 ./app/chat.jsx의 Chat 컴포넌트를 사용합니다.\nconst ChatPage = () => {\n\treturn (\n\t\t<div>\n\t\t\t<h2>챗봇 페이지</h2>\n\t\t\t{/* TODO: './app/chat.jsx'의 Chat 컴포넌트 사용 고려 */}\n\t\t\t<p>챗봇 기능이 여기에 표시됩니다.</p>\n\t\t</div>\n\t);\n};\n\n// AnalysisPage 컴포넌트\n// 영상 업로드 및 분석 결과 표시 로직을 담당합니다.\nconst AnalysisPage = () => {\n\tconst [video, setVideo] = useState(null);\n\tconst [videoUploaded, setVideoUploaded] = useState(false);\n\tconst [result, setResult] = useState(null);\n\tconst [isLoading, setIsLoading] = useState(false); // 로딩 상태 추가\n\tconst [error, setError] = useState(null); // 에러 상태 추가\n\n\t// API 엔드포인트 (환경 변수 등으로 관리하는 것을 권장)\n\tconst API_BASE_URL = \"http://localhost:5000\";\n\n\tconst handleUpload = async () => {\n\t\tif (!video) return;\n\t\tsetIsLoading(true);\n\t\tsetError(null);\n\t\tsetResult(null); // 이전 결과 초기화\n\t\tsetVideoUploaded(false); // 업로드 상태 초기화\n\n\t\tconst formData = new FormData();\n\t\tformData.append(\"video\", video);\n\n\t\ttry {\n\t\t\tconst response = await fetch(`${API_BASE_URL}/upload`, {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\tbody: formData,\n\t\t\t});\n\n\t\t\tif (!response.ok) {\n\t\t\t\tconst errorData = await response\n\t\t\t\t\t.json()\n\t\t\t\t\t.catch(() => ({ message: \"서버 응답을 파싱할 수 없습니다.\" }));\n\t\t\t\tthrow new Error(\n\t\t\t\t\terrorData.message || `HTTP error! status: ${response.status}`\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconst data = await response.json();\n\t\t\tif (data.video_path) {\n\t\t\t\tsetVideoUploaded(true); // 업로드 성공 표시\n\t\t\t\t// 업로드 성공 후 바로 분석 시작 (analyzeVideo 내부에서 로딩 상태 관리)\n\t\t\t\tawait analyzeVideo(data.video_path);\n\t\t\t} else {\n\t\t\t\tthrow new Error(\"서버로부터 비디오 경로를 받지 못했습니다.\");\n\t\t\t}\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Upload failed:\", e);\n\t\t\tsetError(`업로드 실패: ${e.message}`);\n\t\t\tsetVideoUploaded(false);\n\t\t} finally {\n\t\t\t// analyzeVideo가 자체적으로 setIsLoading(false)를 호출하므로,\n\t\t\t// 여기서는 analyzeVideo가 호출되지 않은 경우(예: video_path가 없는 경우)에만 false로 설정\n\t\t\tif (!videoUploaded) {\n\t\t\t\tsetIsLoading(false);\n\t\t\t}\n\t\t}\n\t};\n\n\tconst analyzeVideo = async (videoPath) => {\n\t\t// analyzeVideo 호출 시 이미 setIsLoading(true)가 handleUpload에서 설정되었거나,\n\t\t// 별도 호출 시 여기서 설정 필요\n\t\tif (!isLoading) setIsLoading(true);\n\t\tsetError(null); // 이전 에러 초기화\n\t\tsetResult(null); // 이전 결과 초기화\n\n\t\ttry {\n\t\t\tconst response = await fetch(`${API_BASE_URL}/analyze`, {\n\t\t\t\tmethod: \"POST\",\n\t\t\t\theaders: { \"Content-Type\": \"application/json\" },\n\t\t\t\tbody: JSON.stringify({ video_path: videoPath }),\n\t\t\t});\n\n\t\t\tif (!response.ok) {\n\t\t\t\tconst errorData = await response\n\t\t\t\t\t.json()\n\t\t\t\t\t.catch(() => ({ message: \"서버 응답을 파싱할 수 없습니다.\" }));\n\t\t\t\tthrow new Error(\n\t\t\t\t\terrorData.message || `HTTP error! status: ${response.status}`\n\t\t\t\t);\n\t\t\t}\n\t\t\tconst data = await response.json();\n\t\t\tsetResult(data);\n\t\t} catch (e) {\n\t\t\tconsole.error(\"Analysis failed:\", e);\n\t\t\tsetError(`분석 실패: ${e.message}`);\n\t\t} finally {\n\t\t\tsetIsLoading(false); // 분석 완료 또는 실패 시 로딩 해제\n\t\t}\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<h2>운동 영상 분석</h2>\n\t\t\t{/* 파일 업로드 섹션은 비디오가 업로드되지 않았거나, 업로드 후 분석 결과가 아직 없을 때 표시 */}\n\t\t\t{(!videoUploaded || !result) && !isLoading && (\n\t\t\t\t<div className=\"upload-section\">\n\t\t\t\t\t<input\n\t\t\t\t\t\ttype=\"file\"\n\t\t\t\t\t\taccept=\"video/*\"\n\t\t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\tsetVideo(e.target.files[0]);\n\t\t\t\t\t\t\tsetVideoUploaded(false); // 새 파일 선택 시 업로드 상태 초기화\n\t\t\t\t\t\t\tsetResult(null); // 새 파일 선택 시 결과 초기화\n\t\t\t\t\t\t\tsetError(null); // 새 파일 선택 시 에러 초기화\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t\t<button onClick={handleUpload} disabled={!video || isLoading}>\n\t\t\t\t\t\t{isLoading ? \"처리 중...\" : \"영상 업로드 및 분석 시작\"}\n\t\t\t\t\t</button>\n\t\t\t\t\t<p>MP4, MOV, AVI 형식을 지원합니다. 최대 100MB</p>\n\t\t\t\t</div>\n\t\t\t)}\n\n\t\t\t{isLoading && <p>분석 중입니다...</p>}\n\t\t\t{error && <p style={{ color: \"red\" }}>오류: {error}</p>}\n\n\t\t\t{/* 분석 결과 섹션 */}\n\t\t\t{videoUploaded && !isLoading && !error && result && (\n\t\t\t\t<div className=\"result-section\">\n\t\t\t\t\t<h3>분석 결과</h3>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<strong>점수:</strong> {result.score}\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<strong>강점:</strong>{\" \"}\n\t\t\t\t\t\t{result.strengths && result.strengths.join(\", \")}\n\t\t\t\t\t</p>\n\t\t\t\t\t<p>\n\t\t\t\t\t\t<strong>개선점:</strong>{\" \"}\n\t\t\t\t\t\t{result.improvements && result.improvements.join(\", \")}\n\t\t\t\t\t</p>\n\t\t\t\t\t{/* 다른 영상 분석 버튼 */}\n\t\t\t\t\t<button\n\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\tsetVideo(null);\n\t\t\t\t\t\t\tsetVideoUploaded(false);\n\t\t\t\t\t\t\tsetResult(null);\n\t\t\t\t\t\t\tsetError(null);\n\t\t\t\t\t\t\t// 파일 입력 필드 초기화 (필요시)\n\t\t\t\t\t\t\t// const fileInput = document.querySelector('input[type=\"file\"]');\n\t\t\t\t\t\t\t// if (fileInput) fileInput.value = \"\";\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t다른 영상 분석하기\n\t\t\t\t\t</button>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nfunction App() {\n\t// 현재 활성화된 뷰를 관리하는 상태 ('main', 'chat', 'analysis')\n\t// 기본값으로 'main' (홈 화면)을 설정합니다.\n\tconst [currentView, setCurrentView] = useState(\"main\");\n\n\t// 뷰를 변경하는 함수\n\tconst navigateTo = (view) => {\n\t\tsetCurrentView(view);\n\t};\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<h1>AI 홈트 모니터링</h1>\n\n\t\t\t{/* 네비게이션 탭 UI */}\n\t\t\t<nav className=\"navigation-tabs\">\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => navigateTo(\"main\")}\n\t\t\t\t\tclassName={`nav-button ${currentView === \"main\" ? \"active\" : \"\"}`}\n\t\t\t\t>\n\t\t\t\t\t홈\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => navigateTo(\"chat\")}\n\t\t\t\t\tclassName={`nav-button ${currentView === \"chat\" ? \"active\" : \"\"}`}\n\t\t\t\t>\n\t\t\t\t\t챗봇\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\tonClick={() => navigateTo(\"analysis\")}\n\t\t\t\t\tclassName={`nav-button ${currentView === \"analysis\" ? \"active\" : \"\"}`}\n\t\t\t\t>\n\t\t\t\t\t분석\n\t\t\t\t</button>\n\t\t\t</nav>\n\n\t\t\t{/* 현재 선택된 뷰에 따라 해당 컴포넌트를 렌더링 */}\n\t\t\t<main className=\"view-content\">\n\t\t\t\t{currentView === \"main\" && <Main navigateTo={navigateTo} />}{\" \"}\n\t\t\t\t{currentView === \"chat\" && <ChatPage />}\n\t\t\t\t{/* TODO: './app/analysis.jsx'의 Analysis 컴포넌트 사용 또는 AnalysisPage 와의 역할 분담/통합 고려 */}\n\t\t\t\t{currentView === \"analysis\" && <AnalysisPage />}\n\t\t\t</main>\n\n\t\t\t{/*\n\t\t\t\t참고: main.jsx 파일 내의 <div className=\"home-navigation\"> 부분은\n\t\t\t\tApp.jsx에서 구현한 이 네비게이션과 기능이 중복될 수 있습니다.\n\t\t\t\t만약 App.jsx의 네비게이션을 메인으로 사용한다면,\n\t\t\t\tmain.jsx 내부의 네비게이션은 제거하거나, App.jsx의 navigateTo 함수를 props로 전달받아\n\t\t\t\t연동시키는 방식으로 수정하는 것을 고려해볼 수 있습니다.\n\t\t\t*/}\n\t\t</div>\n\t);\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}