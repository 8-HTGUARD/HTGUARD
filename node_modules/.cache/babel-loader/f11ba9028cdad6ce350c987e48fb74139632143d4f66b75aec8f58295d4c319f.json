{"ast":null,"code":"import React,{useState,useEffect,useRef}from\"react\";import\"./styles/chat.css\";// Images used by CSS background-image (imported but not directly in <img> src in this component)\n// These are implicitly used when an element with the corresponding class is rendered.\nimport logo from\"./styles/asset/logo.svg\";// For .logo\nimport time from\"./styles/asset/time.svg\";// For .chat-time background\n// wifi, cellular, battery are imported but not directly used by .chat-time CSS as written\n// (only the last background-image in a CSS rule applies unless using multiple backgrounds)\nimport wifi from\"./styles/asset/wifi.svg\";import cellular from\"./styles/asset/cellular.svg\";import battery from\"./styles/asset/battery.svg\";import chatInputIcon from\"./styles/asset/chat_input_icon.svg\";// For .input-button background\n// Unused imports, likely for a removed bottom navigation:\n// import vectorWrapper from \"./styles/asset/vector-wrapper.svg\";\n// import vector4 from \"./styles/asset/Vector-4.svg\";\n// import vector5 from \"./styles/asset/Vector-5.svg\";\nimport{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export const Chat=_ref=>{let{navigateTo=()=>{}}=_ref;const[messages,setMessages]=useState([{id:1,text:\"안녕하세요! 무엇을 도와드릴까요?\",sender:\"bot\"},{id:2,text:\"안녕하세요, 질문이 있습니다.\",sender:\"user\"}]);const[inputValue,setInputValue]=useState(\"\");const chatBodyRef=useRef(null);useEffect(()=>{if(chatBodyRef.current){chatBodyRef.current.scrollTop=chatBodyRef.current.scrollHeight;}},[messages]);const handleSendMessage=()=>{if(inputValue.trim()===\"\")return;const newMessage={id:Date.now(),text:inputValue,sender:\"user\"};setMessages(prevMessages=>[...prevMessages,newMessage]);setInputValue(\"\");// TODO: Chatbot API call\n};const handleKeyPress=event=>{if(event.key===\"Enter\"&&!event.shiftKey){event.preventDefault();handleSendMessage();}};return/*#__PURE__*/_jsxs(\"div\",{className:\"chat\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"logo\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-header\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chat-time\"}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-header-name\",children:/*#__PURE__*/_jsx(\"div\",{className:\"title\",children:\"AI\\uCC57\\uBD07\"})})]}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-body\",ref:chatBodyRef,children:/*#__PURE__*/_jsx(\"div\",{className:\"main\",children:/*#__PURE__*/_jsx(\"div\",{className:\"div\",children:messages.map(msg=>/*#__PURE__*/_jsx(\"div\",{className:`message-row ${// Base class for spacing\nmsg.sender===\"bot\"?\"bot-message\":\"user-message\"}`// bot-message/user-message for alignment (needs CSS)\n,children:msg.sender===\"bot\"?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"chat-man-img\",children:[\" \",/*#__PURE__*/_jsxs(\"div\",{className:\"img\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"frame\"}),\" \"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"div2\",children:[\" \",/*#__PURE__*/_jsxs(\"div\",{className:\"chat-help-mention\",children:[\" \",/*#__PURE__*/_jsx(\"div\",{className:\"div3\",children:msg.text}),\" \"]})]})]}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"div7\",children:[\" \",/*#__PURE__*/_jsxs(\"div\",{className:\"p\",children:[\" \",/*#__PURE__*/_jsx(\"div\",{className:\"div8\",children:msg.text}),\" \"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"div6\",children:[\" \",/*#__PURE__*/_jsxs(\"div\",{className:\"img2\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"frame2\"}),\" \"]})]})]})},msg.id))})})}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-input\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"div9\",children:[\" \",/*#__PURE__*/_jsx(\"div\",{className:\"chat-input-textbox\",children:/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"\\uBA54\\uC2DC\\uC9C0\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694...\"// Placeholder text\n,value:inputValue,onChange:e=>setInputValue(e.target.value),onKeyPress:handleKeyPress// className=\"div10\" // .div10 styles placeholder text, not the input field itself directly usually\n})}),/*#__PURE__*/_jsx(\"div\",{className:\"input-button\",onClick:handleSendMessage,role:\"button\"// Accessibility: Indicate this div acts as a button\n,tabIndex:\"0\"// Accessibility: Make it focusable\n,onKeyPress:e=>e.key===\"Enter\"&&handleSendMessage()// Accessibility: Allow Enter key press\n})]})})]});};","map":{"version":3,"names":["React","useState","useEffect","useRef","logo","time","wifi","cellular","battery","chatInputIcon","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Chat","_ref","navigateTo","messages","setMessages","id","text","sender","inputValue","setInputValue","chatBodyRef","current","scrollTop","scrollHeight","handleSendMessage","trim","newMessage","Date","now","prevMessages","handleKeyPress","event","key","shiftKey","preventDefault","className","children","ref","map","msg","type","placeholder","value","onChange","e","target","onKeyPress","onClick","role","tabIndex"],"sources":["C:/Users/didxo/OneDrive/Desktop/3rd project code(flask)/my-react-app/src/app/chat.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\n\r\nimport \"./styles/chat.css\";\r\n\r\n// Images used by CSS background-image (imported but not directly in <img> src in this component)\r\n// These are implicitly used when an element with the corresponding class is rendered.\r\nimport logo from \"./styles/asset/logo.svg\"; // For .logo\r\nimport time from \"./styles/asset/time.svg\"; // For .chat-time background\r\n// wifi, cellular, battery are imported but not directly used by .chat-time CSS as written\r\n// (only the last background-image in a CSS rule applies unless using multiple backgrounds)\r\nimport wifi from \"./styles/asset/wifi.svg\";\r\nimport cellular from \"./styles/asset/cellular.svg\";\r\nimport battery from \"./styles/asset/battery.svg\";\r\nimport chatInputIcon from \"./styles/asset/chat_input_icon.svg\"; // For .input-button background\r\n// Unused imports, likely for a removed bottom navigation:\r\n// import vectorWrapper from \"./styles/asset/vector-wrapper.svg\";\r\n// import vector4 from \"./styles/asset/Vector-4.svg\";\r\n// import vector5 from \"./styles/asset/Vector-5.svg\";\r\n\r\nexport const Chat = ({ navigateTo = () => {} }) => {\r\n\tconst [messages, setMessages] = useState([\r\n\t\t{ id: 1, text: \"안녕하세요! 무엇을 도와드릴까요?\", sender: \"bot\" },\r\n\t\t{ id: 2, text: \"안녕하세요, 질문이 있습니다.\", sender: \"user\" },\r\n\t]);\r\n\tconst [inputValue, setInputValue] = useState(\"\");\r\n\tconst chatBodyRef = useRef(null);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (chatBodyRef.current) {\r\n\t\t\tchatBodyRef.current.scrollTop = chatBodyRef.current.scrollHeight;\r\n\t\t}\r\n\t}, [messages]);\r\n\r\n\tconst handleSendMessage = () => {\r\n\t\tif (inputValue.trim() === \"\") return;\r\n\t\tconst newMessage = {\r\n\t\t\tid: Date.now(),\r\n\t\t\ttext: inputValue,\r\n\t\t\tsender: \"user\",\r\n\t\t};\r\n\t\tsetMessages((prevMessages) => [...prevMessages, newMessage]);\r\n\t\tsetInputValue(\"\");\r\n\t\t// TODO: Chatbot API call\r\n\t};\r\n\r\n\tconst handleKeyPress = (event) => {\r\n\t\tif (event.key === \"Enter\" && !event.shiftKey) {\r\n\t\t\tevent.preventDefault();\r\n\t\t\thandleSendMessage();\r\n\t\t}\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className=\"chat\">\r\n\t\t\t{/* Logo: Positioned absolutely by CSS (.chat .logo) */}\r\n\t\t\t<div className=\"logo\"></div>\r\n\r\n\t\t\t<div className=\"chat-header\">\r\n\t\t\t\t{/* Chat Time: Styled by CSS (.chat .chat-time), uses time.svg as background */}\r\n\t\t\t\t<div className=\"chat-time\">\r\n\t\t\t\t\t{/* wifi, cellular, battery icons would need separate elements or advanced CSS for .chat-time if they are all to be visible */}\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"chat-header-name\">\r\n\t\t\t\t\t{/* Title: Positioned by CSS (.chat .title) */}\r\n\t\t\t\t\t<div className=\"title\">AI챗봇</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className=\"chat-body\" ref={chatBodyRef}>\r\n\t\t\t\t<div className=\"main\">\r\n\t\t\t\t\t{/* Message list container: Styled by CSS (.chat .div) */}\r\n\t\t\t\t\t<div className=\"div\">\r\n\t\t\t\t\t\t{messages.map((msg) => (\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tkey={msg.id}\r\n\t\t\t\t\t\t\t\tclassName={`message-row ${\r\n\t\t\t\t\t\t\t\t\t// Base class for spacing\r\n\t\t\t\t\t\t\t\t\tmsg.sender === \"bot\" ? \"bot-message\" : \"user-message\"\r\n\t\t\t\t\t\t\t\t}`} // bot-message/user-message for alignment (needs CSS)\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{msg.sender === \"bot\" ? (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"chat-man-img\">\r\n\t\t\t\t\t\t\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{/* Bot avatar container */}\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"img\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"frame\" />{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* Bot avatar placeholder/image */}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"div2\">\r\n\t\t\t\t\t\t\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{/* Bot message bubble */}\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"chat-help-mention\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* Text container in bubble */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"div3\">{msg.text}</div> {/* Bot text */}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"div7\">\r\n\t\t\t\t\t\t\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{/* User message bubble */}\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"p\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* Text container in bubble */}\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"div8\">{msg.text}</div> {/* User text */}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"div6\">\r\n\t\t\t\t\t\t\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t{/* User avatar container */}\r\n\t\t\t\t\t\t\t\t\t\t\t<div className=\"img2\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<div className=\"frame2\" />{\" \"}\r\n\t\t\t\t\t\t\t\t\t\t\t\t{/* User avatar placeholder/image */}\r\n\t\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* Chat Input: Positioned absolutely by CSS (.chat .chat-input) */}\r\n\t\t\t<div className=\"chat-input\">\r\n\t\t\t\t{/* Input elements container: Styled by CSS (.chat .div9) */}\r\n\t\t\t\t<div className=\"div9\">\r\n\t\t\t\t\t{\" \"}\r\n\t\t\t\t\t{/* Empty div removed */}\r\n\t\t\t\t\t<div className=\"chat-input-textbox\">\r\n\t\t\t\t\t\t{/* Input field: Placeholder styled by CSS (.chat .div10 for placeholder text style) */}\r\n\t\t\t\t\t\t{/* The actual input element will take styles from .chat-input-textbox and its own type styles */}\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tplaceholder=\"메시지를 입력하세요...\" // Placeholder text\r\n\t\t\t\t\t\t\tvalue={inputValue}\r\n\t\t\t\t\t\t\tonChange={(e) => setInputValue(e.target.value)}\r\n\t\t\t\t\t\t\tonKeyPress={handleKeyPress}\r\n\t\t\t\t\t\t\t// className=\"div10\" // .div10 styles placeholder text, not the input field itself directly usually\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{/* Send Button: Styled by CSS (.chat .input-button), uses chat_input_icon.svg as background */}\r\n\t\t\t\t\t{/* Consider using a <button> element for better accessibility */}\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tclassName=\"input-button\"\r\n\t\t\t\t\t\tonClick={handleSendMessage}\r\n\t\t\t\t\t\trole=\"button\" // Accessibility: Indicate this div acts as a button\r\n\t\t\t\t\t\ttabIndex=\"0\" // Accessibility: Make it focusable\r\n\t\t\t\t\t\tonKeyPress={(e) => e.key === \"Enter\" && handleSendMessage()} // Accessibility: Allow Enter key press\r\n\t\t\t\t\t></div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAE1D,MAAO,mBAAmB,CAE1B;AACA;AACA,MAAO,CAAAC,IAAI,KAAM,yBAAyB,CAAE;AAC5C,MAAO,CAAAC,IAAI,KAAM,yBAAyB,CAAE;AAC5C;AACA;AACA,MAAO,CAAAC,IAAI,KAAM,yBAAyB,CAC1C,MAAO,CAAAC,QAAQ,KAAM,6BAA6B,CAClD,MAAO,CAAAC,OAAO,KAAM,4BAA4B,CAChD,MAAO,CAAAC,aAAa,KAAM,oCAAoC,CAAE;AAChE;AACA;AACA;AACA;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAEA,MAAO,MAAM,CAAAC,IAAI,CAAGC,IAAA,EAA+B,IAA9B,CAAEC,UAAU,CAAGA,CAAA,GAAM,CAAC,CAAE,CAAC,CAAAD,IAAA,CAC7C,KAAM,CAACE,QAAQ,CAAEC,WAAW,CAAC,CAAGnB,QAAQ,CAAC,CACxC,CAAEoB,EAAE,CAAE,CAAC,CAAEC,IAAI,CAAE,oBAAoB,CAAEC,MAAM,CAAE,KAAM,CAAC,CACpD,CAAEF,EAAE,CAAE,CAAC,CAAEC,IAAI,CAAE,kBAAkB,CAAEC,MAAM,CAAE,MAAO,CAAC,CACnD,CAAC,CACF,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGxB,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAAAyB,WAAW,CAAGvB,MAAM,CAAC,IAAI,CAAC,CAEhCD,SAAS,CAAC,IAAM,CACf,GAAIwB,WAAW,CAACC,OAAO,CAAE,CACxBD,WAAW,CAACC,OAAO,CAACC,SAAS,CAAGF,WAAW,CAACC,OAAO,CAACE,YAAY,CACjE,CACD,CAAC,CAAE,CAACV,QAAQ,CAAC,CAAC,CAEd,KAAM,CAAAW,iBAAiB,CAAGA,CAAA,GAAM,CAC/B,GAAIN,UAAU,CAACO,IAAI,CAAC,CAAC,GAAK,EAAE,CAAE,OAC9B,KAAM,CAAAC,UAAU,CAAG,CAClBX,EAAE,CAAEY,IAAI,CAACC,GAAG,CAAC,CAAC,CACdZ,IAAI,CAAEE,UAAU,CAChBD,MAAM,CAAE,MACT,CAAC,CACDH,WAAW,CAAEe,YAAY,EAAK,CAAC,GAAGA,YAAY,CAAEH,UAAU,CAAC,CAAC,CAC5DP,aAAa,CAAC,EAAE,CAAC,CACjB;AACD,CAAC,CAED,KAAM,CAAAW,cAAc,CAAIC,KAAK,EAAK,CACjC,GAAIA,KAAK,CAACC,GAAG,GAAK,OAAO,EAAI,CAACD,KAAK,CAACE,QAAQ,CAAE,CAC7CF,KAAK,CAACG,cAAc,CAAC,CAAC,CACtBV,iBAAiB,CAAC,CAAC,CACpB,CACD,CAAC,CAED,mBACCjB,KAAA,QAAK4B,SAAS,CAAC,MAAM,CAAAC,QAAA,eAEpB/B,IAAA,QAAK8B,SAAS,CAAC,MAAM,CAAM,CAAC,cAE5B5B,KAAA,QAAK4B,SAAS,CAAC,aAAa,CAAAC,QAAA,eAE3B/B,IAAA,QAAK8B,SAAS,CAAC,WAAW,CAErB,CAAC,cACN9B,IAAA,QAAK8B,SAAS,CAAC,kBAAkB,CAAAC,QAAA,cAEhC/B,IAAA,QAAK8B,SAAS,CAAC,OAAO,CAAAC,QAAA,CAAC,gBAAI,CAAK,CAAC,CAC7B,CAAC,EACF,CAAC,cAEN/B,IAAA,QAAK8B,SAAS,CAAC,WAAW,CAACE,GAAG,CAAEjB,WAAY,CAAAgB,QAAA,cAC3C/B,IAAA,QAAK8B,SAAS,CAAC,MAAM,CAAAC,QAAA,cAEpB/B,IAAA,QAAK8B,SAAS,CAAC,KAAK,CAAAC,QAAA,CAClBvB,QAAQ,CAACyB,GAAG,CAAEC,GAAG,eACjBlC,IAAA,QAEC8B,SAAS,CAAE,eACV;AACAI,GAAG,CAACtB,MAAM,GAAK,KAAK,CAAG,aAAa,CAAG,cAAc,EAClD;AAAA,CAAAmB,QAAA,CAEHG,GAAG,CAACtB,MAAM,GAAK,KAAK,cACpBV,KAAA,CAAAE,SAAA,EAAA2B,QAAA,eACC7B,KAAA,QAAK4B,SAAS,CAAC,cAAc,CAAAC,QAAA,EAC3B,GAAG,cAEJ7B,KAAA,QAAK4B,SAAS,CAAC,KAAK,CAAAC,QAAA,eACnB/B,IAAA,QAAK8B,SAAS,CAAC,OAAO,CAAE,CAAC,CAAC,GAAG,EAEzB,CAAC,EACF,CAAC,cACN5B,KAAA,QAAK4B,SAAS,CAAC,MAAM,CAAAC,QAAA,EACnB,GAAG,cAEJ7B,KAAA,QAAK4B,SAAS,CAAC,mBAAmB,CAAAC,QAAA,EAChC,GAAG,cAEJ/B,IAAA,QAAK8B,SAAS,CAAC,MAAM,CAAAC,QAAA,CAAEG,GAAG,CAACvB,IAAI,CAAM,CAAC,IAAC,EACnC,CAAC,EACF,CAAC,EACL,CAAC,cAEHT,KAAA,CAAAE,SAAA,EAAA2B,QAAA,eACC7B,KAAA,QAAK4B,SAAS,CAAC,MAAM,CAAAC,QAAA,EACnB,GAAG,cAEJ7B,KAAA,QAAK4B,SAAS,CAAC,GAAG,CAAAC,QAAA,EAChB,GAAG,cAEJ/B,IAAA,QAAK8B,SAAS,CAAC,MAAM,CAAAC,QAAA,CAAEG,GAAG,CAACvB,IAAI,CAAM,CAAC,IAAC,EACnC,CAAC,EACF,CAAC,cACNT,KAAA,QAAK4B,SAAS,CAAC,MAAM,CAAAC,QAAA,EACnB,GAAG,cAEJ7B,KAAA,QAAK4B,SAAS,CAAC,MAAM,CAAAC,QAAA,eACpB/B,IAAA,QAAK8B,SAAS,CAAC,QAAQ,CAAE,CAAC,CAAC,GAAG,EAE1B,CAAC,EACF,CAAC,EACL,CACF,EA9CII,GAAG,CAACxB,EA+CL,CACL,CAAC,CACE,CAAC,CACF,CAAC,CACF,CAAC,cAGNV,IAAA,QAAK8B,SAAS,CAAC,YAAY,CAAAC,QAAA,cAE1B7B,KAAA,QAAK4B,SAAS,CAAC,MAAM,CAAAC,QAAA,EACnB,GAAG,cAEJ/B,IAAA,QAAK8B,SAAS,CAAC,oBAAoB,CAAAC,QAAA,cAGlC/B,IAAA,UACCmC,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,4DAAgB;AAAA,CAC5BC,KAAK,CAAExB,UAAW,CAClByB,QAAQ,CAAGC,CAAC,EAAKzB,aAAa,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAC/CI,UAAU,CAAEhB,cACZ;AAAA,CACA,CAAC,CACE,CAAC,cAGNzB,IAAA,QACC8B,SAAS,CAAC,cAAc,CACxBY,OAAO,CAAEvB,iBAAkB,CAC3BwB,IAAI,CAAC,QAAS;AAAA,CACdC,QAAQ,CAAC,GAAI;AAAA,CACbH,UAAU,CAAGF,CAAC,EAAKA,CAAC,CAACZ,GAAG,GAAK,OAAO,EAAIR,iBAAiB,CAAC,CAAG;AAAA,CACxD,CAAC,EACH,CAAC,CACF,CAAC,EACF,CAAC,CAER,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}